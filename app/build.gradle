plugins {
    id 'org.springframework.boot' version '2.3.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'jacoco'
    id "org.openapi.generator" version "4.3.1"
}

group 'com.tieto.core.sus'
version '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
project.archivesBaseName = 'sus'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.SR6")
}

dependencies {
    implementation project(":imdb-client")
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.springframework.cloud:spring-cloud-starter-consul-discovery'
    implementation 'org.springframework.cloud:spring-cloud-starter-consul-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    compile 'org.springframework.cloud:spring-cloud-starter-consul-all:1.3.0.RELEASE'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    compile "com.zaxxer:HikariCP:3.4.5"
    compile "org.flywaydb:flyway-core:6.5.2"
    compile "org.springframework.retry:spring-retry:1.3.0"
    compile group: 'org.openapitools', name: 'jackson-databind-nullable', version: '0.2.1'
    compile group: 'io.swagger', name: 'swagger-annotations', version: '1.6.2'
    compile files('libs/ojdbc8.jar')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: [
                            'com/tieto/core/sus/model/**',
                            'com/tieto/core/sus/api/**',
                    ])
        }))
    }
}

compileJava.dependsOn tasks.openApiGenerate

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$projectDir/src/main/resources/sus.yaml".toString()
    outputDir = "$buildDir/generated".toString()
    apiPackage = "com.tieto.core.sus.api"
    modelPackage = "com.tieto.core.sus.model"
    library = "spring-cloud"
    configOptions = [
            dateLibrary  : "java8",
            interfaceOnly: "true"
    ]
}

sourceSets {
    main {
        java {
            srcDirs += ["$buildDir/generated/src/main/java"]
        }
    }
}

tasks.openApiGenerate.doLast {
    delete "${buildDir}/generated/src/main/java/org"
}
